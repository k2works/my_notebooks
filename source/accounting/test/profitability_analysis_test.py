import unittest
from src.profitability_analysis import *
from src.balance_sheet import *
from src.income_statement import *

class Test総合収益性分析(unittest.TestCase):
    def setUp(self):
        _流動資産内訳 = [
            現金及び預金(13500),
            受取手形(10000),
            売掛金(15000),
            貸倒引当金(600, 科目.貸),
            有価証券(2000),
            商品(30000),
            前払費用(1000),
            未収収益(1200)
        ]
        _流動資産 = 流動資産(_流動資産内訳)
        _有形固定資産内訳 = [
            土地(33000),
            建物(50000),
            減価償却累計(10000, 科目.貸)
        ]
        _無形固定資産内訳 = [
            のれん(1000)
        ]
        _投資その他の資産内訳 = [
            関係会社株式(3500),
            投資有価証券(3000),
            長期貸付金(2000),
            貸倒引当金(200, 科目.貸)
        ]
        _固定資産内訳 = [
            有形固定資産(_有形固定資産内訳),
            無形固定資産(_無形固定資産内訳),
            投資その他の資産(_投資その他の資産内訳)
        ]
        _固定資産 = 固定資産(_固定資産内訳)
        _繰延資産内訳 = [
            開業費(1000)
        ]
        _繰延資産 = 繰延資産(_繰延資産内訳)
        _流動負債内訳 = [
            買掛金(29800),
            短期借入金(22900),
            未払法人税等(200),
            未払費用(500),
            前受収益(1000),
            賞与引当金(1500)
        ]
        _流動負債 = 流動負債(_流動負債内訳)
        _固定負債内訳 = [
            社債(15000),
            長期借入金(20000),
            退職給付金(5000)
        ]
        _固定負債 = 固定負債(_固定負債内訳)
        _株主資本内訳 = [
            資本金(35000),
            資本剰余金([
                資本準備金(10000),
                その他資本剰余金(2000)
            ]),
            利益剰余金([
                利益準備金(2000),
                その他利益剰余金([
                    任意積立金(1500),
                    繰越利益剰余金(10000)
                ])
            ]),
            自己株式(1000, 科目.借)
        ]
        _純資産内訳 = [
            株主資本(_株主資本内訳),
            評価換算差額等(0),
            新株予約権(0)
        ]
        _純資産 = 純資産(_純資産内訳)
        _貸借対照表 = 貸借対照表(_流動資産, _固定資産, _繰延資産, _流動負債, _固定負債, _純資産)

        _売上高 = 売上高(10000)
        _売上原価 = 売上原価(3000)
        _販管費内訳 = [
            給料賃金(500),
            福利厚生費(500),
            広告宣伝費(500),
            水道光熱費(500),
            交際費(500),
            保険料(500),
            支払家賃(500),
            減価償却費(500)
        ]
        _販管費 = 販管費(_販管費内訳)
        _営業外収益内訳 = [
            受取利息(50),
            受取配当金(50),
            有価証券評価益(50),
            有価証券売却益(50),
            受取家賃(50),
            仕入割引(50)
        ]
        _営業外収益 = 営業外収益(_営業外収益内訳)
        _営業外費用内訳 = [
            支払利息(100),
            手形売却損(100),
            有価証券評価損(100),
            有価証券売却損(100),
            売上割引(100)
        ]
        _営業外費用 = 営業外費用(_営業外費用内訳)
        _特別利益内訳 = [
            固定資産売却益(0),
            国庫補助金受贈益(0)
        ]
        _特別利益 = 特別利益(_特別利益内訳)
        _特別損失内訳 = [
            固定資産売却損(0),
            災害損失(0)
        ]
        _特別損失 = 特別損失(_特別損失内訳)
        _損益計算書 = 損益計算書(_売上高, _売上原価, _販管費, _営業外収益, _営業外費用, _特別利益, _特別損失)

        self.総合収益性分析 = 総合収益性分析(_貸借対照表,_損益計算書)

    def test総資本経常利益率(self):
        self.assertEqual('1.8%', str(self.総合収益性分析.総資本経常利益率))

    def test総資本当期純利益率(self):
        self.assertEqual('1.08%', str(self.総合収益性分析.総資本当期純利益率))

    def test自己資本当期純利益率(self):
        self.assertEqual('2.82%', str(self.総合収益性分析.自己資本当期純利益率))

class Test収益性分析(unittest.TestCase):
    def setUp(self):
        _売上高 = 売上高(10000)
        _売上原価 = 売上原価(3000)
        _販管費内訳 = [
            給料賃金(500),
            福利厚生費(500),
            広告宣伝費(500),
            水道光熱費(500),
            交際費(500),
            保険料(500),
            支払家賃(500),
            減価償却費(500)
        ]
        _販管費 = 販管費(_販管費内訳)
        _営業外収益内訳 = [
            受取利息(50),
            受取配当金(50),
            有価証券評価益(50),
            有価証券売却益(50),
            受取家賃(50),
            仕入割引(50)
        ]
        _営業外収益 = 営業外収益(_営業外収益内訳)
        _営業外費用内訳 = [
            支払利息(100),
            手形売却損(100),
            有価証券評価損(100),
            有価証券売却損(100),
            売上割引(100)
        ]
        _営業外費用 = 営業外費用(_営業外費用内訳)
        _特別利益内訳 = [
            固定資産売却益(0),
            国庫補助金受贈益(0)
        ]
        _特別利益 = 特別利益(_特別利益内訳)
        _特別損失内訳 = [
            固定資産売却損(0),
            災害損失(0)
        ]
        _特別損失 = 特別損失(_特別損失内訳)
        _損益計算書 = 損益計算書(_売上高, _売上原価, _販管費, _営業外収益, _営業外費用, _特別利益, _特別損失)

        self.収益性分析 = 収益性分析(_損益計算書)

    def test売上高経常利益率(self):
        self.assertEqual('28.00%', str(self.収益性分析.売上高総利益率))

    def test売上高営業利益率(self):
        self.assertEqual('30.00%', str(self.収益性分析.売上高営業利益率))

    def test売上高総利益率(self):
        self.assertEqual('70.00%', str(self.収益性分析.売上高総利益率))

    def test売上高販売費一般管理費率(self):
        self.assertEqual('40.00%', str(self.収益性分析.売上高販売費一般管理費率))


if __name__ == "__main__":
    unittest.main()